{"meaning": "A thread is an entity within a process that can be scheduled for execution. Also, it is the smallest unit of processing that can be performed in an OS (Operating System). In simple words, a thread is a sequence of such instructions within a program that can be executed independently of other code.", "syntax": "thread(target=<funtion>).start()", "example": "import threading\n \n \ndef print_cube(num):\n    # function to print cube of given num\n    print(\"Cube: {}\" .format(num * num * num))\n \n \ndef print_square(num):\n    # function to print square of given num\n    print(\"Square: {}\" .format(num * num))\n \n \nif __name__ ==\"__main__\":\n    # creating thread\n    t1 = threading.Thread(target=print_square, args=(10,))\n    t2 = threading.Thread(target=print_cube, args=(10,))\n \n    # starting thread 1\n    t1.start()\n    # starting thread 2\n    t2.start()\n \n    # wait until thread 1 is completely executed\n    t1.join()\n    # wait until thread 2 is completely executed\n    t2.join()\n \n    # both threads completely executed\n    print(\"Done!\")"}